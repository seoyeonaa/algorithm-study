# 1. 유효한 팰린드롬 확인하기
# Q1) 'A man, a plan, a canal: Panama'의 팰린드롬 확인
# A-1) 리스트로 변환
# A-2) 데크 자료형을 이용한 최적화
# A-3) 정규식 활용

# 2. 문자열 뒤집기
# Q1) 문자열을 뒤집는 함수를 작성하라. 입력값은 문자 배열이며, 리턴없이 리스트 내부를 직접 조작.
# A-1) 투 포인터를 이용한 스왑
# A-2) 파이썬다운 방식
ex = ["h", "e", "l", "l", "o"]
ans = ["o", "l", "l", "e", "h"]

# 3.로그 파일 재정렬
# Q) 로그를 재정렬하라. 기준은 다음과 같다.
# 1) 로그의 가장 앞 부분은 식별자이다.
# 2) 문자로 구성된 로그가 숫자 로그보다 앞에 온다.
# 3) 식별자는 순서에 영향을 끼치지 않지만, 문자가 동일할 경우 식별자 순으로 한다.
# 4) 숫자 로그는 입력 순서대로 한다.
logs = ["dig1 8 1 5 1", "let1 art can", "dig2 3 6", "let2 own kit dig", "let3 art zero"]

# 4. 가장 흔한 단어
# Q) 금지된 단어를 제외한 가장 흔하게 등장하는 단어를 출력하라. 기준은 다음과 같다.
# 1) 대소문자를 구분하지 않는다.
# 2) 구두점(마침표, 쉼표 등) 또한 무시한다.

# 5. 그룹 애너그램
# Q) 문자열 배열을 받아 애너그램 단위로 그룹핑하라.
ex = ["eat", "tea", "tan", "ate", "nat", "bat"]

# 6. 가장 긴 팰린드롬 부분 문자열
# Q) 가장 긴 팰린드롬 부분 문자열을 출력하라.
ex = "babad"
